#!/bin/sh

red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
NC='\033[0m'

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	# Change it to match your initial commit sha
	against=a2f47cec8e06403186d33af68ffe7e2ed381c629
fi

# ============ #
# Rubocop part #
# ============ #

# Check if rubocop is installed for the current project
bundle exec rubocop -v >/dev/null 2>&1 || { echo >&2 "${red}[Ruby Style][Fatal]: Add rubocop to your Gemfile"; exit 1; }

# Get only the staged files
FILES="$(git diff --cached --name-only --diff-filter=AMC | tr '\n' ' ')"

echo "${green}[Ruby Style][Info]: Checking Ruby Style${NC}"

if [ -n "$FILES" ]; then
    # Check if rubocop is configured
    if [ ! -f '.rubocop.yml' ]; then
	echo "${yellow}[Ruby Style][Warning]: No .rubocop.yml config file.${NC}"
    fi

    # Run rubocop on the staged files
    bundle exec rubocop ${FILES}

    if [ $? -ne 0 ]; then
	echo "${red}[Ruby Style][Error]: Fix the issues and commit again${NC}"
	exit 1
    fi
fi

# =========== #
# Eslint part #
# =========== #

# Check if rubocop is installed for the current project
node_modules/.bin/eslint -v >/dev/null 2>&1 || { echo >&2 "${red}[Javascript Style][Fatal]: Add eslint to your NPM package"; exit 1; }

# Get only the javascript staged files
JS_FILES="$(git diff --cached --name-only --diff-filter=AMC | grep ".js" | tr '\n' ' ')"

echo "${green}[Javascript Style][Info]: Checking Javascript Style${NC}"

if [ -n "$JS_FILES" ]; then
    # Check if eslint is configured
    if [ ! -f '.eslintrc.yml' ]; then
	echo "${yellow}[Javascript Style][Warning]: No .eslintrc.yml config file.${NC}"
    fi

    # Run eslint on the staged javascript files
    node_modules/.bin/eslint ${JS_FILES}

    if [ $? -ne 0 ]; then
	echo "${red}[Javascript Style][Error]: Fix the issues and commit again${NC}"
	exit 1
    fi
fi

exit 0
